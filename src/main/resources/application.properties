spring.application.name=UserAuthService

# JDBC URL
spring.datasource.url=jdbc:mysql://localhost:3306/userauthdb

# Your new user credentials
spring.datasource.username=springuser
spring.datasource.password=StrongPassword123!

# MySQL driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate settings
spring.jpa.hibernate.ddl-auto=update
spring.flyway.enabled=false
spring.jpa.show-sql=true
spring.main.allow-bean-definition-overriding=true
server.port=8080

jwt.secret = "your-super-secret-key-is-long-enough-for-verification"

logging.level.org.springframework.security=trace

#spring.security.user.name=user
#spring.security.user.password=password
#
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-id=oidc-client
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-secret={noop}secret
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-authentication-methods=client_secret_basic
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types=authorization_code,refresh_token
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.redirect-uris=http://127.0.0.1:8080/login/oauth2/code/oidc-client
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.post-logout-redirect-uris=http://127.0.0.1:8080/
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.scopes=openid,profile
#spring.security.oauth2.authorizationserver.client.oidc-client.require-authorization-consent=true

